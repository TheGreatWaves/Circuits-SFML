CHIP computer {
	IN reset, 
	   clock, 
	   load,                   // For debugging
	   write_address[15],      // For debugging
	   read_address[15],       // For debugging
	   in[16];                 // For debugging

	OUT outM[16],
	    instruction_memory[16],
		jump,
		memory_out[16],
		writeM,
		addressM[15],
	    current_instruction_address[15];

	PARTS:
	// Instruction Memory
	rom_32k(
		in            = in,
		load          = load,
		clock         = clock,
		out           = instruction_memory, 
		read_address  = current_instruction_address,
		write_address = write_address
	);

	forward(in=clock, out=late_clock_1);
	forward(in=late_clock_1, out=late_clock_2);

	// Memory
	// Note: Extend this later
	ram_16k(
		in          = outM,
		address[0]  = addressM[0],
		address[1]  = addressM[1],
		address[2]  = addressM[2],
		address[3]  = addressM[3],
		address[4]  = addressM[4],
		address[5]  = addressM[5],
		address[6]  = addressM[6],
		address[7]  = addressM[7],
		address[8]  = addressM[8],
		address[9]  = addressM[9],
		address[10] = addressM[10],
		address[11] = addressM[11],
		address[12] = addressM[12],
		address[13] = addressM[13],
		clock       = late_clock_2,
		load        = writeM,
		out         = memory_out
	);

	cpu(
		reset       = reset,
		instruction = instruction_memory,
		inM         = memory_out,
		outM        = outM,
		writeM      = writeM,
		addressM    = addressM,
		clock       = clock,
		load_pc     = jump,
		pc          = current_instruction_address
	);
}
